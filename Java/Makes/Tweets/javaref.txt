---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : そういえば、コンストラクタって関数なのか。
                  ってことは、クラスインスタンス中唯一暗黙のthisを持たないインスタンス関数？
                  いや、違う。
                  多分コンストラクタはクラス関数なんだ。 [[ 21:36]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : もしくはnew関数という考え方もできるかもしれない。
                  もちろん概念上で。
                  new関数に暗黙の型引数T…というメタ関数的例え。 [[ 21:37]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : でも実際、コンストラクタってどこでインスタンス返してるんだ？
                  コンストラクタ内でthisを参照することがあるってことは… [[ 21:37]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : いや、そもそもイニシャライザ時点でthisを参照できている。
                  ということは、thisを作っているのはコンストラクタではなくnewであると考えられるのではないか。 [[ 21:39]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : ってことは、コンストラクタ(構築者)って作ってないじゃんインスタンス。
                  いや、構成という意味で"コンストラクタ"なのか。 [[ 21:40]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : newにJVMの声を聴いた。 [[ 21:41]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : newって…なんだ？
                  JVM読書会行きたくなってきた。 [[ 21:42]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : RT @shipp0sak1: オブジェクト．プロパティ(複数記述可)．メソッド(複数記述可)． 1RT [[ 21:43]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : そう、プロパティはおそらくオブジェクト内に位置する。
                  じゃあ、継承クラスのインスタンスにおけるスーパークラスに定義されたプロパティはどこに確保されている？ [[ 21:45]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : 以前親プロパティ(ここでは親クラスで定義済みのプロパティを指す)は
                  サブクラスインスタンスから参照はできるが継承はしないことを確認した。
                  つまりおそらく「継承クラスのインスタンスはスーパークラスのインスタンスを持っている」可能性があるのではないかと考える。 [[ 21:47]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : そう考えたならばメソッドのオーバーライドという考えは自然だ。
                  なぜならそれをコールした時に
                  インスタンス関数における暗黙の引数thisの型に合う方の関数が自動的に選択されるであろうからだ。 [[ 21:48]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : という考えは視点を変えると、
                  もし暗黙の引数thisをスーパークラス型にキャストしてから関数をコールできたならば
                  スーパークラス側で定義された(オーバーロードされていない)方の関数が呼ばれることになる。 [[ 21:50]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : ということは、thisをスーパークラス型にキャストしてからスーパークラス型で定義されたプロパティを参照できるのも自然だ。 [[ 21:51]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : つまりこういうことだね。 [[ 21:52]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : あ、今トイレだからPCない。 [[ 21:52]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : まあ、暗黙の引数thisを知ってると事実はわからずとも
                  考えられて面白いと思う。 [[ 21:54]]
---------------------------------------------------------------------------------------------------------------------------------------------
aiya_000        : さて、本気で本当に今の考えはどこまであっているのか
                  答え合わせをしよう。 [[ 21:57]]
---------------------------------------------------------------------------------------------------------------------------------------------
